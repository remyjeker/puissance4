/* scss variables */
$tablet-up-width: 800px;
$base-padding: 16px;
$player-icon-size: 20px;
$toolbar-height: 60px;
$grid-ratio: 0.8333;

/* scss colors */
$base-layout-color: #cecece;
$base-toolbar-color: #1976d2;
$player-yellow-color: yellow;
$winning-color: #424242;
$player-red-color: red;
$contrast-color: white;
$dark-color: #232121;

/* splash message frame */
$frame-top-left: 20vw 35vh;
$frame-top-right: 70vw 35vh;
$frame-bottom-right: 70vw 55vh;
$frame-bottom-left: 20vw 55vh;

/* animations */
@keyframes bouncyDrop {
  0%   { transform: scale(1,1)    translateY(-800%); }
  20%  { transform: scale(1.1,.9) translateY(0); }
  30%  { transform: scale(.9,1.1) translateY(-100%); }
  50%  { transform: scale(1,1)    translateY(0); }
  100% { transform: scale(1,1)    translateY(0); }
}

/* scss mixins */
@mixin toolbar-font-style {
  color: $contrast-color;
  font-weight: 600;
}

@mixin animated-token {
  animation: bouncyDrop 1s;
}

@mixin rounded {
  border-radius: 50%;
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';
  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};
    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin splash-texts {
  font-size: 5vw;
  line-height: 5vw;
  font-weight: 700;
}

/* reused classes */
.player-yellow {
  background-color: $player-yellow-color;
}

.player-red {
  background-color: $player-red-color;
}

/* declarations */
.view-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 100vw;
  height: 100vh;
  background-color: $base-layout-color;
}

.toolbar {
  height: $toolbar-height;
  padding: 0 $base-padding;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: $base-toolbar-color;
  @include toolbar-font-style;

  .current-player {
    width: #{2 * $player-icon-size};
    height: #{2 * $player-icon-size};
    @include rounded;
    padding: #{$player-icon-size / 2};;
    box-sizing: border-box;

    .icon-player {
      width: $player-icon-size;
      height: $player-icon-size;
    }
  }

  .actions {
    button {
      margin-right: 10px;

      &::first-letter {
        text-transform: uppercase;
      }
    }

    :last-child {
      margin-right: 0;
    }
  }
}

.content {
  padding: 16px 2vw;
  overflow: hidden;
  box-sizing: border-box;

  .grid-layout {
    width: 100%;
    height: calc(#{$grid-ratio} * (100vw - (2 * 2vw)));
    padding: 4.5vw 7.25vw 9.75vw 9.5vw;

    display: grid;
    grid-template-columns: repeat(7, 1fr);

    box-sizing: border-box;
    background-size: cover;

    .column {
      display: grid;
      grid-template-rows: repeat(6, 1fr);
      grid-gap: 2vw;

      .cell {
        width: 8.75vw;
        height: 8.75vw;
        @include rounded;
        box-sizing: border-box;
        box-shadow: 0 -1vw 0 0 $dark-color inset;
        cursor: pointer;

        &.player-yellow , &.player-red {
          @include animated-token;
          box-shadow: 0 1vw 2vw $dark-color inset;
        }

        &.winning {
          background-color: $winning-color;
        }
      }
    }
  }
}

/* media queries */
@media screen and (min-width: $tablet-up-width) {
  .content {
    width: $tablet-up-width;
    max-width: $tablet-up-width;
    margin: 0 auto;
    padding: $base-padding;

    .grid-layout {
      width: #{$tablet-up-width - (2 * $base-padding)};
      height: calc(#{$grid-ratio} * #{$tablet-up-width - (2 * $base-padding)});
      padding: 38px 66px 78px 76px;
      grid-gap: 8px;

      .column {
        grid-gap: 16px;

        .cell {
          width: 70px;
          height: 70px;
          box-shadow: 0 -8px 0 0 $dark-color inset;

          &.player-yellow , &.player-red {
            box-shadow: 0 8px 16px $dark-color inset;
          }
        }
      }
    }
  }
}

.splash-container {
  .splash {
    position: fixed;
    top: 0;
    width: 100vw;
    height: 100vh;
    display: flex;
    overflow: hidden;

    .message {
      position: absolute;
      top: 47vh;
      left: 50vh;
      margin: 0 0 0 -200px;
      color: transparent;
      z-index: 8;
      @include splash-texts;
      @include animation('appear 0.3s ease-in 0.5s forwards, off 0.6s ease-in-out 3.0s forwards');

      &::first-letter {
        text-transform: uppercase;
      }
    }

    .svg {
      position: relative;
      margin: auto;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      width: 100vw;
      height: 100vh;

      svg {
        width: 100vw;
        height: 100vh;

        rect {
          width: 100vw;
          height: 100vh;
          -webkit-clip-path: polygon($frame-top-left, $frame-top-right, $frame-bottom-right, $frame-bottom-left);
          clip-path: polygon($frame-top-left, $frame-top-right, $frame-bottom-right, $frame-bottom-left);
          @include animation('expand 0.7s ease-in forwards 2.7s');

          &.yellow {
            fill: rgba($color: $player-yellow-color, $alpha: 0.6);
          }

          &.red {
            fill: rgba($color: $player-red-color, $alpha: 0.6);
          }
        }
      }
    }
  }

  .game-end {
    position: absolute;
    top: 30vh;
    left: 15vw;
    padding: 10vw;
    border: 1px solid black;
    border-radius: 5px;
    background-color: white;
    z-index: 9;
    opacity: 0;
    @include splash-texts;
    @include animation('on 0.6s ease-in-out 3.7s forwards');

    p {
      &::first-letter {
        text-transform: uppercase;
      }
    }
    
    button {
      width: 100%;
      border: 1px solid black;
      background: black;
      color: white;
      text-transform: uppercase;
      opacity: 0;
      @include transition(color 0.5s, background-color 0.5s);
      @include animation('on 0.6s ease-in-out 4.0s forwards');

      &:hover {
        background: transparent;
        color: black;
        border: 1px solid black;
      }
    }
  }

  @include keyframes (off) {
    100% {
      opacity: 0;
    }
  }

  @include keyframes (on) {
    100% {
      opacity: 1;
    }
  }

  @include keyframes (appear) {
    100% {
      color: black;
    }
  }

  @include keyframes(expand) {
    0% {}
    25% {
      -webkit-clip-path: polygon(0vw 0vh, $frame-top-right, $frame-bottom-right, $frame-bottom-left);
      clip-path: polygon(0vw 0vh, $frame-top-right, $frame-bottom-right, $frame-bottom-left);
    }
    50% {
      -webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, $frame-bottom-right, $frame-bottom-left);
      clip-path: polygon(0vw 0vh, 100vw 0vh, $frame-bottom-right, $frame-bottom-left);
    }
    75% {
      -webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, $frame-bottom-left);
      clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, $frame-bottom-left);
    }
    100% {
      fill: rgba($color: black, $alpha: 0.6);
      -webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
      clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
    }
  }
}